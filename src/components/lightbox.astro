---
import 'photoswipe/style.css'
import 'photoswipe-dynamic-caption-plugin/photoswipe-dynamic-caption-plugin.css'
import { Image } from 'astro:assets'
import { Masonry } from 'astro-masonry'

export interface Props {
  id: string
  images: ImageMetadata[]
  exifs?: Record<string, any>[]
  grid?: boolean
}

const { id, images, exifs, grid = true } = Astro.props

const imagetitles = images.map((image) => image.src.split('/').reverse()[0].split('.')[0])
---

<style>
  .pswp--custom-icon-colors {
    --pswp-icon-color: #eee;
    --pswp-icon-color-secondary: #663399;
  }

  .pswp__dynamic-caption--aside {
    max-width: 300px;
    padding: 20px 15px 20px 20px;
    margin-top: 70px;
  }

  .pswp__dynamic-caption--below {
    max-width: 700px;
    padding: 15px 0 0;
  }

  .pswp__dynamic-caption--mobile {
    background: rgba(0, 0, 0, 0.5);
    padding: 10px 15px;
  }
</style>
<lightbox-inner data-id={id}>
  <div id={id} itemscope itemtype="http://schema.org/ImageGallery">
    {
      grid ? (
        <Masonry
          breakpointCols={{
            default: 4,
            1280: 3,
            1024: 2,
            768: 1,
            640: 1
          }}
          class="not-prose flex gap-4 px-4"
          columnClass=""
        >
          {images.map((image, i) => (
            <figure
              itemscope
              itemtype="http://schema.org/ImageObject"
              class="my-2 inline-block rounded bg-gray-300 text-center text-sm text-gray-800 italic shadow-lg shadow-gray-400 dark:bg-gray-800 dark:text-gray-300 dark:shadow-black"
            >
              <a
                href={image.src}
                itemprop="contentUrl"
                data-pswp-width={image.width}
                data-pswp-height={image.height}
              >
                <Image
                  src={image}
                  alt={imagetitles[i]}
                  width={600}
                  height={(image.height * 600) / image.width}
                  format="webp"
                  class="rounded"
                />
                <span class="pswp-caption-content">
                  {imagetitles[i]}
                  {exifs && exifs[i] && (
                    <span>{' (' + exifs[i].Make + ' ' + exifs[i].Model + ')'}</span>
                  )}
                </span>
              </a>
              <figcaption itemprop="caption description" class="rounded">
                {imagetitles[i]}
              </figcaption>
            </figure>
          ))}
        </Masonry>
      ) : (
        images.map((image, i) => (
          <a
            href={image.src}
            itemprop="contentUrl"
            data-pswp-width={image.width}
            data-pswp-height={image.height}
          >
            <Image src={image} alt={imagetitles[i]} format="webp" class="rounded" />
            <span class="pswp-caption-content">
              {imagetitles[i]}
              {exifs && exifs[i] && (
                <span>{' (' + exifs[i].Make + ' ' + exifs[i].Model + ')'}</span>
              )}
            </span>
          </a>
        ))
      )
    }
  </div>
</lightbox-inner>
<script>
  import PhotoSwipe from 'photoswipe'
  import PhotoSwipeLightbox from 'photoswipe/lightbox'
  import PhotoSwipeDynamicCaption from 'photoswipe-dynamic-caption-plugin'

  class LightboxInner extends HTMLElement {
    constructor() {
      super()

      const id = this.dataset.id

      const lightbox = new PhotoSwipeLightbox({
        mainClass: 'pswp--custom-icon-colors',
        gallery: '#' + id,
        children: 'a',
        pswpModule: PhotoSwipe,
        paddingFn: () => {
          return {
            top: 0,
            bottom: 30,
            left: 0,
            right: 0
          }
        }
      })

      new PhotoSwipeDynamicCaption(lightbox, {
        captionContent: '.pswp-caption-content',
        type: 'below'
      })

      lightbox.init()
    }
  }
  customElements.define('lightbox-inner', LightboxInner)
</script>
